{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productCreateReviewReducer, productDetailsReducer, productListReducer } from \"./Reducers/ProductReducers\";\nimport { cartReducer } from \"./Reducers/CartReducers\";\nimport { userDetailsReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer } from \"./Reducers/userReducers\";\nimport { orderCreateReducer, orderDetailsReducer, orderListMyReducer, orderPayReducer } from \"./Reducers/OrderReducres\";\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productReviewCreate: productCreateReviewReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer\n});\nconst cartItemsFromLocalStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : []; // login\n\nconst userInfoFromLocalStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null; // shippingAddress\n\nconst shippingAddressFromLocalStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromLocalStorage,\n    shippingAddress: shippingAddressFromLocalStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromLocalStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/josea/OneDrive/Escritorio/NEW_STORE_PROJECT/FRONTEND/src/Redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productCreateReviewReducer","productDetailsReducer","productListReducer","cartReducer","userDetailsReducer","userLoginReducer","userRegisterReducer","userUpdateProfileReducer","orderCreateReducer","orderDetailsReducer","orderListMyReducer","orderPayReducer","reducer","productList","productDetails","productReviewCreate","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","orderDetails","orderPay","orderListMy","cartItemsFromLocalStorage","localStorage","getItem","JSON","parse","userInfoFromLocalStorage","shippingAddressFromLocalStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,0BADF,EAEEC,qBAFF,EAGEC,kBAHF,QAIO,4BAJP;AAKA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SACEC,kBADF,EAEEC,gBAFF,EAGEC,mBAHF,EAIEC,wBAJF,QAKO,yBALP;AAMA,SACEC,kBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,eAJF,QAKO,0BALP;AAOA,MAAMC,OAAO,GAAGhB,eAAe,CAAC;AAC9BiB,EAAAA,WAAW,EAAEX,kBADiB;AAE9BY,EAAAA,cAAc,EAAEb,qBAFc;AAG9Bc,EAAAA,mBAAmB,EAAEf,0BAHS;AAI9BgB,EAAAA,IAAI,EAAEb,WAJwB;AAK9Bc,EAAAA,SAAS,EAAEZ,gBALmB;AAM9Ba,EAAAA,YAAY,EAAEZ,mBANgB;AAO9Ba,EAAAA,WAAW,EAAEf,kBAPiB;AAQ9BgB,EAAAA,iBAAiB,EAAEb,wBARW;AAS9Bc,EAAAA,WAAW,EAAEb,kBATiB;AAU9Bc,EAAAA,YAAY,EAAEb,mBAVgB;AAW9Bc,EAAAA,QAAQ,EAAEZ,eAXoB;AAY9Ba,EAAAA,WAAW,EAAEd;AAZiB,CAAD,CAA/B;AAeA,MAAMe,yBAAyB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAC9BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAD8B,GAE9B,EAFJ,C,CAIA;;AACA,MAAMG,wBAAwB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAC7BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAD6B,GAE7B,IAFJ,C,CAIA;;AACA,MAAMI,+BAA+B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IACpCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADoC,GAEpC,EAFJ;AAIA,MAAMK,YAAY,GAAG;AACnBhB,EAAAA,IAAI,EAAE;AACJiB,IAAAA,SAAS,EAAER,yBADP;AAEJS,IAAAA,eAAe,EAAEH;AAFb,GADa;AAKnBd,EAAAA,SAAS,EAAE;AAAEkB,IAAAA,QAAQ,EAAEL;AAAZ;AALQ,CAArB;AAQA,MAAMM,UAAU,GAAG,CAACtC,KAAD,CAAnB;AAEA,MAAMuC,KAAK,GAAG1C,WAAW,CACvBiB,OADuB,EAEvBoB,YAFuB,EAGvBjC,mBAAmB,CAACF,eAAe,CAAC,GAAGuC,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  productCreateReviewReducer,\r\n  productDetailsReducer,\r\n  productListReducer,\r\n} from \"./Reducers/ProductReducers\";\r\nimport { cartReducer } from \"./Reducers/CartReducers\";\r\nimport {\r\n  userDetailsReducer,\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userUpdateProfileReducer,\r\n} from \"./Reducers/userReducers\";\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderListMyReducer,\r\n  orderPayReducer,\r\n} from \"./Reducers/OrderReducres\";\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productReviewCreate: productCreateReviewReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderListMy: orderListMyReducer,\r\n});\r\n\r\nconst cartItemsFromLocalStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\n\r\n// login\r\nconst userInfoFromLocalStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\n// shippingAddress\r\nconst shippingAddressFromLocalStorage = localStorage.getItem(\"shippingAddress\")\r\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n  : {};\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromLocalStorage,\r\n    shippingAddress: shippingAddressFromLocalStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromLocalStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}